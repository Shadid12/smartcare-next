{"version":3,"file":"static/webpack/static/development/pages/dash.js.d2a8509d063a80e8c213.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\n\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  firstName: '',\n  lastName: '',\n  age: '',\n  gender: 'female',\n  allergies: '',\n  physician: '',\n  primaryDiagonosis: ''\n}\n\nexport const actionTypes = {\n  TICK: 'TICK',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET',\n  FIRSTNAME: 'FIRSTNAME',\n  LASTNAME: 'LASTNAME',\n  AGE: 'AGE',\n  GENDER: 'GENDER',\n  PHYSICIAN: 'PHYSICIAN',\n  ALLERGIES: 'ALLERGIES',\n  PRIMARYDIAGONOSIS: 'PRIMARYDIAGONOSIS'\n\n}\n\n// REDUCERS\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return Object.assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      })\n    case actionTypes.INCREMENT:\n      return Object.assign({}, state, {\n        count: state.count + 1\n      })\n    case actionTypes.DECREMENT:\n      return Object.assign({}, state, {\n        count: state.count - 1\n      })\n    case actionTypes.RESET:\n      return Object.assign({}, state, {\n        count: exampleInitialState.count\n      })\n    case actionTypes.FIRSTNAME:\n      return Object.assign({}, state, {\n        firstName: action.payload\n      })\n\n    case actionTypes.LASTNAME:\n      return Object.assign({}, state, {\n        lastName: action.payload\n      })\n    case actionTypes.PHYSICIAN:\n      return Object.assign({}, state, {\n        physician: action.payload\n      })\n    case actionTypes.ALLERGIES:\n      return Object.assign({}, state, {\n        allergies: action.payload\n      })\n\n    case actionTypes.PRIMARYDIAGONOSIS:\n      return Object.assign({}, state, {\n        primaryDiagonosis: action.payload\n      })\n\n    case actionTypes.GENDER:\n      return Object.assign({}, state, {\n        gender: action.payload\n      })\n\n    case actionTypes.AGE:\n      return Object.assign({}, state, {\n        age: action.payload\n      })\n    \n    default: return state\n  }\n}\n\n// ACTIONS\nexport const serverRenderClock = (isServer) => dispatch => {\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\n}\n\nexport const startClock = dispatch => {\n  return setInterval(() => {\n    // Dispatch `TICK` every 1 second\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\n  }, 1000)\n}\n\nexport const incrementCount = () => dispatch => {\n  return dispatch({ type: actionTypes.INCREMENT })\n}\n\nexport const decrementCount = () => dispatch => {\n  return dispatch({ type: actionTypes.DECREMENT })\n}\n\nexport const resetCount = () => dispatch => {\n  return dispatch({ type: actionTypes.RESET })\n}\n\nexport const changeName = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.FIRSTNAME, payload: payload })\n}\n\nexport const changeLastName = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.LASTNAME, payload: payload })\n}\n\nexport const changeAge = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.AGE, payload: payload })\n}\n\nexport const changeGender = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.GENDER, payload: payload })\n}\n\nexport const changeAllergies = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.ALLERGIES, payload: payload })\n}\n\nexport const changePrimaryDiagonosis = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.PRIMARYDIAGONOSIS, payload: payload })\n}\n\nexport const changePhysician = (payload) => dispatch => {\n  return dispatch({ type: actionTypes.PHYSICIAN, payload: payload })\n}\n\nexport function initializeStore (initialState = exampleInitialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)))\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAgBA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AADA;AACA;AAGA;AAAA;AAnDA;AAqDA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AACA;;;;A","sourceRoot":""}